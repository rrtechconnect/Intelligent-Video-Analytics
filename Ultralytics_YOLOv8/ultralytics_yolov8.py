# -*- coding: utf-8 -*-
"""Ultralytics YOLOv8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RHNsFlxnI8VPWsQHwMKrYJiT42_kRqWc

1. Installing Dependencies

  Clone the YOLOv8 Github Repo
"""

!git clone https://github.com/ultralytics/ultralytics.git

"""  2. Change Working Directory to ultralytics"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ultralytics

"""3. Install all the Requirements"""

!pip install -r requirements.txt

"""4. Install Ultralytics"""

!pip install ultralytics

"""   5. Download the Sample Videos for Inferencing"""

#!gdown --fuzzy https://drive.google.com/file/d/1Nebqd8WFDkdWyCSyqn6qvGreKedxPPff/view?usp=sharing
!gdown --fuzzy https://drive.google.com/file/d/1Kc-1bRiDtLCBwfU3dq7BInwfWO6E4TND/view?usp=sharing

"""6. Running YOLOv8 Object Detection"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/
!yolo task=detect mode=predict model=yolov8n.pt conf=0.25 save=True source="/content/ultralytics/People-6387.mp4"

"""7. Viewing Output"""

from IPython.display import HTML
from base64 import b64encode
import os

# Input video path
save_path = '/content/runs/detect/predict/People-6387.mp4'

# Compressed video path
compressed_path = "/content/compressed_output_video_People-6387.mp4"

os.system(f"ffmpeg -i {save_path} -vcodec libx264 {compressed_path}")

# Show video
mp4 = open(compressed_path,'rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML("""
<video width=400 controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)

"""8. Run YOLOv8 Object Segmentation"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/
!yolo task=segment mode=predict model = yolov8n-seg.pt conf=0.25 save=True source="/content/ultralytics/People-6387.mp4"

"""9. Viewing the segmanted output"""

from IPython.display import HTML
from base64 import b64encode
import os

# Input video path
save_path = '/content/runs/segment/predict2/People-6387.mp4'

# Compressed video path
compressed_path = "/content/seg_output_People-6387.mp4"

os.system(f"ffmpeg -i {save_path} -vcodec libx264 {compressed_path}")

# Show video
mp4 = open(compressed_path,'rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML("""
<video width=400 controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)